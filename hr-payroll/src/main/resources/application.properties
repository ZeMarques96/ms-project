spring.application.name=hr-payroll
server.port=${PORT:0}


#hr-worker.host=http://localhost:8001


# Define configurações para o circuito "hrWorkerService"
resilience4j.circuitbreaker.instances.hrWorkerService.sliding-window-size=8
# Tempo de espera máximo para uma resposta (em milissegundos)
resilience4j.circuitbreaker.instances.hrWorkerService.timeoutDuration=2000
resilience4j.circuitbreaker.instances.hrWorkerService.minimum-number-of-calls=4
# Tempo de espera antes de tentar chamadas novamente após o circuito abrir
resilience4j.circuitbreaker.instances.hrWorkerService.wait-duration-in-open-state=10s
# Número de chamadas permitidas quando o circuito entra em estado HALF_OPEN (teste)
resilience4j.circuitbreaker.instances.hrWorkerService.permitted-number-of-calls-in-half-open-state=2


# Eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
